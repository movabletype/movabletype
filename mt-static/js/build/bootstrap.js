const c={},r={};async function l(n){return c[n]||(c[n]=new Promise(o=>{setTimeout(async()=>{const e=await r[n].reduce(async(t,i)=>i(await t),()=>Promise.resolve());o(e)},0)}))}async function m(n){return r[n]||(r[n]=[]),new Promise(o=>{r[n].push(e=>new Promise(t=>{o({original:e,resolve:t})}))})}const u={import:l,export:m},w={},a={};async function d(n){return w[n]||(w[n]=new Promise(o=>{const[e,t]=n.split(/\./,2);setTimeout(async()=>{let i=await Promise.all((a[e]||[]).map(s=>s()));t&&(i=i.filter(({variant:s})=>!s||s===t)),o(i.map(({component:s})=>s))},0)}))}async function y(n){const[o,e]=n.split(/\./,2);return a[o]||(a[o]=[]),new Promise(t=>{a[o].push(async()=>{const i=await new Promise(s=>{t({resolve:s})});return{variant:e,component:i}})})}const P={getAll:d,add:y},f={Component:P};function g(){["uploadAssets","sendHttpRequest","getJSON","Alert","Logger"].forEach(async n=>{const{resolve:o}=await window.MT.export(n),e=await import(`./${n}.js`);o(e[n])})}const p={UI:f,...u};window.MT?Object.assign(window.MT,p):window.MT=p,g();
